

stages:
  - test
  - build
  - docu
  - deploy

run_tests_3.8:
  image: python:3.8-bullseye
  stage: test
  before_script:
    - pip install --upgrade pip
    - pip install -r requirements/test_requirements.txt
    - pip install .
  script:
    - coverage run -m pytest tests/ --html=test_report/report.html --junitxml=report.xml
    - coverage report
    - coverage xml
    - coverage html
  coverage: '/(?i)total.*? (100(?:\.0+)?\%|[1-9]?\d(?:\.\d+)?\%)$/'
  artifacts:
    reports:
      junit: report.xml
      coverage_report:
        coverage_format: cobertura
        path: coverage.xml
    paths:
      - htmlcov
      - test_report


software_catalogue_entry:
  image: d-reg.hb.dfki.de:5000/ubuntu:overview_generator
  stage: deploy
  script:
  - apt update
  - apt install -y wget
  - wget http://bob.dfki.uni-bremen.de/software_overview/generate.sh
  - sh generate.sh $CI_PROJECT_NAMESPACE $CI_PROJECT_NAME $CI_PROJECT_URL
  rules:
    - if: '$CI_COMMIT_TAG =~ /^\d+\.\d+\.\d+$/'

pylint:
  image: python:3.8-bullseye
  stage: test
  before_script:
    - mkdir -p public/badges public/lint
    - echo undefined > public/badges/$CI_JOB_NAME.score
    - pip install --upgrade pip
    - pip install -r requirements/test_requirements.txt
    - pip install .
  script:
    - pylint --exit-zero --output-format=text $(find -type f -name "*.py" ! -path "**/.venv/**") | tee /tmp/pylint.txt
    - sed -n 's/^Your code has been rated at \([-0-9.]*\)\/.*/\1/p' /tmp/pylint.txt > public/badges/$CI_JOB_NAME.score
    - pylint --exit-zero --output-format=pylint_gitlab.GitlabCodeClimateReporter $(find -type f -name "*.py" ! -path "**/.venv/**") > codeclimate.json
    - pylint --exit-zero --output-format=pylint_gitlab.GitlabPagesHtmlReporter $(find -type f -name "*.py" ! -path "**/.venv/**") > public/lint/index.html
  after_script:
    - anybadge --overwrite --label $CI_JOB_NAME --value=$(cat public/badges/$CI_JOB_NAME.score) --file=public/badges/$CI_JOB_NAME.svg 4=red 6=orange 8=yellow 10=green
    - |
      echo "Your score is: $(cat public/badges/$CI_JOB_NAME.score)"
  artifacts:
    paths:
      - public
    reports:
      codequality: codeclimate.json
    when: always


build_docu:
  image: python:3.8-bullseye
  stage: docu
  script:
    - pip install --upgrade pip
    - pip install -r requirements/doc_requirements.txt
    - pip install .
    - mkdocs build
  artifacts:
    paths:
      - site

upload_docu:
  image: debian:latest
  stage: deploy
  script:
    - echo "Uploading docu"
    - rm -rf /home/www/htdocs/apis/$CI_PROJECT_NAMESPACE/$CI_PROJECT_NAME/latest
    - rm -rf /home/www/htdocs/apis/$CI_PROJECT_NAMESPACE/$CI_PROJECT_NAME/$CI_COMMIT_TAG
    - mkdir -p /home/www/htdocs/apis/$CI_PROJECT_NAMESPACE/$CI_PROJECT_NAME/$CI_COMMIT_TAG
    - mkdir -p /home/www/htdocs/apis/$CI_PROJECT_NAMESPACE/$CI_PROJECT_NAME/latest
    - cp -R site/* /home/www/htdocs/apis/$CI_PROJECT_NAMESPACE/$CI_PROJECT_NAME/$CI_COMMIT_TAG
    - cp -R site/* /home/www/htdocs/apis/$CI_PROJECT_NAMESPACE/$CI_PROJECT_NAME/latest
  rules:
    - if: '$CI_COMMIT_TAG =~ /^\d+\.\d+\.\d+$/'


# This is not so easy because the badge cannot be linked to a commit dependend link - So I could maybe link to the latest on develop but thats not good. 
# upload_reports:
#   image: debian:latest
#   stage: deploy
#   script:
#     - echo "Uploading reports"
#     - mkdir -p /home/www/htdocs/apis/$CI_PROJECT_NAMESPACE/$CI_PROJECT_NAME/reports/CI_COMMIT_SHA
#     - cp -R htmlcov/* /home/www/htdocs/apis/$CI_PROJECT_NAMESPACE/$CI_PROJECT_NAME/$CI_COMMIT_TAG


build_installable_package:
  image: python:3.8-bullseye
  stage: build
  script:
    - pip install setuptools wheel
    - python setup.py sdist bdist_wheel
  artifacts:
    paths:
      - dist

upload_pypi:
  image: python:3.8-bullseye
  stage: deploy
  script:
    - pip install twine
    - twine upload dist/*
  rules:
  - if: '$CI_COMMIT_TAG =~ /^\d+\.\d+\.\d+$/'